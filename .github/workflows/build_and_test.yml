name: Build and run tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - develop

jobs:
  build-and-test:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Get current date
      run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        # Add date to the cache to keep it up to date
        key: ${{ matrix.platform }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          cargo-registry-${{ hashFiles('**/Cargo.toml') }}
    - name: Cache cargo index
      uses: actions/cache@v2
      with:
        path: ~/.cargo/git
        # Add date to the cache to keep it up to date
        key: ${{ matrix.platform }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          cargo-index-${{ hashFiles('**/Cargo.toml') }}
    - name: Cache cargo target
      uses: actions/cache@v2
      with:
        path: target
        # Add date to the cache to keep it up to date
        key: ${{ matrix.platform }}-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          cargo-build-target-${{ hashFiles('**/Cargo.toml') }}

    # paho.mqtt requires openssl and OPENSSL_ROOT_DIR on macOS
    - name: Install OpenSSL (macOS)
      run: |
        brew update
        brew install openssl
      if: matrix.platform = 'macos-latest'
    - name: set openssl path env variable
      run: echo "OPENSSL_ROOT_DIR=$(brew --prefix openssl)" >> $GITHUB_ENV
      if: matrix.platform = 'macos-latest'

    # paho.mqtt requires openssl on Windows
    - name: Install OpenSSL 1.0.2s - Windows
      # Prebuilt openssl:x64-windows-static from https://github.com/microsoft/vcpkg/releases/tag/2019.12
      run: |
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest https://iotaledger-files.s3.eu-central-1.amazonaws.com/trinity/desktop/prebuild/windows/vcpkg-export-openssl-1.0.2s.zip -OutFile openssl.zip
        Expand-Archive openssl.zip -DestinationPath C:\src\vcpkg
        Remove-Item openssl.zip
      if: matrix.os == 'windows-latest'

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release
