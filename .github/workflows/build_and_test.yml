name: Build and run tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - develop

jobs:
  build-and-test:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Get current date
      run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        # Add date to the cache to keep it up to date
        key: ${{ matrix.platform }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          cargo-registry-${{ hashFiles('**/Cargo.toml') }}
    - name: Cache cargo index
      uses: actions/cache@v2
      with:
        path: ~/.cargo/git
        # Add date to the cache to keep it up to date
        key: ${{ matrix.platform }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          cargo-index-${{ hashFiles('**/Cargo.toml') }}
    - name: Cache cargo target
      uses: actions/cache@v2
      with:
        path: target
        # Add date to the cache to keep it up to date
        key: ${{ matrix.platform }}-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          cargo-build-target-${{ hashFiles('**/Cargo.toml') }}

    # paho.mqtt requires openssl and OPENSSL_ROOT_DIR on macOS
    - name: Install OpenSSL (macOS)
      if: matrix.platform == 'macos-latest'
      run: |
        brew update
        brew install openssl
    - name: set openssl path env variable
      if: matrix.platform == 'macos-latest'
      run: echo "OPENSSL_ROOT_DIR=$(brew --prefix openssl)" >> $GITHUB_ENV

    # paho.mqtt requires openssl on Windows
    - name: Install OpenSSL (Windows)
      if: matrix.platform == 'windows-latest'
      run: |
        choco install openssl
        ls "C:\Program Files"
        echo "OPENSSL_ROOT_DIR=C:\Program Files\OpenSSL-Win64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release -vv

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release
